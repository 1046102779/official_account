// Code generated by protoc-gen-go.
// source: sms.proto
// DO NOT EDIT!

package igrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CodeRequest struct {
	Mobile string `protobuf:"bytes,1,opt,name=Mobile" json:"Mobile,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=Code" json:"Code,omitempty"`
}

func (m *CodeRequest) Reset()                    { *m = CodeRequest{} }
func (m *CodeRequest) String() string            { return proto.CompactTextString(m) }
func (*CodeRequest) ProtoMessage()               {}
func (*CodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *CodeRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *CodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type CodeReply struct {
	RetCode int32  `protobuf:"varint,1,opt,name=RetCode" json:"RetCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg" json:"ErrMsg,omitempty"`
}

func (m *CodeReply) Reset()                    { *m = CodeReply{} }
func (m *CodeReply) String() string            { return proto.CompactTextString(m) }
func (*CodeReply) ProtoMessage()               {}
func (*CodeReply) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *CodeReply) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CodeReply) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type MobileInfo struct {
	Mobile string `protobuf:"bytes,1,opt,name=Mobile" json:"Mobile,omitempty"`
}

func (m *MobileInfo) Reset()                    { *m = MobileInfo{} }
func (m *MobileInfo) String() string            { return proto.CompactTextString(m) }
func (*MobileInfo) ProtoMessage()               {}
func (*MobileInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *MobileInfo) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type ContentInfo struct {
	Content string `protobuf:"bytes,1,opt,name=Content" json:"Content,omitempty"`
}

func (m *ContentInfo) Reset()                    { *m = ContentInfo{} }
func (m *ContentInfo) String() string            { return proto.CompactTextString(m) }
func (*ContentInfo) ProtoMessage()               {}
func (*ContentInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *ContentInfo) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type SmsRequest struct {
	Mobiles  []*MobileInfo  `protobuf:"bytes,1,rep,name=Mobiles" json:"Mobiles,omitempty"`
	Contents []*ContentInfo `protobuf:"bytes,2,rep,name=Contents" json:"Contents,omitempty"`
}

func (m *SmsRequest) Reset()                    { *m = SmsRequest{} }
func (m *SmsRequest) String() string            { return proto.CompactTextString(m) }
func (*SmsRequest) ProtoMessage()               {}
func (*SmsRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *SmsRequest) GetMobiles() []*MobileInfo {
	if m != nil {
		return m.Mobiles
	}
	return nil
}

func (m *SmsRequest) GetContents() []*ContentInfo {
	if m != nil {
		return m.Contents
	}
	return nil
}

// 短信充值订单信息更新
type SmsRechargeOrderInfo struct {
	OutTradeNo    string `protobuf:"bytes,1,opt,name=OutTradeNo" json:"OutTradeNo,omitempty"`
	Money         int64  `protobuf:"varint,2,opt,name=Money" json:"Money,omitempty"`
	TransactionId string `protobuf:"bytes,3,opt,name=TransactionId" json:"TransactionId,omitempty"`
}

func (m *SmsRechargeOrderInfo) Reset()                    { *m = SmsRechargeOrderInfo{} }
func (m *SmsRechargeOrderInfo) String() string            { return proto.CompactTextString(m) }
func (*SmsRechargeOrderInfo) ProtoMessage()               {}
func (*SmsRechargeOrderInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *SmsRechargeOrderInfo) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *SmsRechargeOrderInfo) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *SmsRechargeOrderInfo) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func init() {
	proto.RegisterType((*CodeRequest)(nil), "igrpc.CodeRequest")
	proto.RegisterType((*CodeReply)(nil), "igrpc.CodeReply")
	proto.RegisterType((*MobileInfo)(nil), "igrpc.MobileInfo")
	proto.RegisterType((*ContentInfo)(nil), "igrpc.ContentInfo")
	proto.RegisterType((*SmsRequest)(nil), "igrpc.SmsRequest")
	proto.RegisterType((*SmsRechargeOrderInfo)(nil), "igrpc.SmsRechargeOrderInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SmsGrpc service

type SmsGrpcClient interface {
	MatchMobileVerificationCode(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Bool, error)
}

type smsGrpcClient struct {
	cc *grpc.ClientConn
}

func NewSmsGrpcClient(cc *grpc.ClientConn) SmsGrpcClient {
	return &smsGrpcClient{cc}
}

func (c *smsGrpcClient) MatchMobileVerificationCode(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := grpc.Invoke(ctx, "/igrpc.SmsGrpc/MatchMobileVerificationCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SmsGrpc service

type SmsGrpcServer interface {
	MatchMobileVerificationCode(context.Context, *KeyValue) (*Bool, error)
}

func RegisterSmsGrpcServer(s *grpc.Server, srv SmsGrpcServer) {
	s.RegisterService(&_SmsGrpc_serviceDesc, srv)
}

func _SmsGrpc_MatchMobileVerificationCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsGrpcServer).MatchMobileVerificationCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igrpc.SmsGrpc/MatchMobileVerificationCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsGrpcServer).MatchMobileVerificationCode(ctx, req.(*KeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

var _SmsGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "igrpc.SmsGrpc",
	HandlerType: (*SmsGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MatchMobileVerificationCode",
			Handler:    _SmsGrpc_MatchMobileVerificationCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sms.proto",
}

func init() { proto.RegisterFile("sms.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xd9, 0xe6, 0x56, 0xf7, 0xa6, 0x88, 0x61, 0x48, 0x98, 0x20, 0xa3, 0x0c, 0x1c, 0x08,
	0x3d, 0xcc, 0x93, 0x88, 0x17, 0x45, 0x65, 0x48, 0x1d, 0x64, 0x63, 0xf7, 0x2c, 0x7d, 0xdb, 0x0a,
	0x6d, 0x52, 0x93, 0xec, 0xd0, 0xff, 0x5e, 0x9a, 0xa6, 0x3a, 0x0f, 0xde, 0xfa, 0x7d, 0xfc, 0xde,
	0xfb, 0xbe, 0xbc, 0x42, 0xdf, 0xe4, 0x26, 0x2a, 0xb4, 0xb2, 0x8a, 0x74, 0xd3, 0x9d, 0x2e, 0xc4,
	0xe8, 0x4c, 0xa8, 0x3c, 0x57, 0xb2, 0x36, 0xc3, 0x07, 0x18, 0xbc, 0xa8, 0x04, 0x19, 0x7e, 0x1d,
	0xd0, 0x58, 0x72, 0x05, 0xbd, 0x58, 0x6d, 0xd2, 0x0c, 0x69, 0x6b, 0xdc, 0x9a, 0xf6, 0x99, 0x57,
	0x84, 0xc0, 0x49, 0x85, 0xd1, 0xb6, 0x73, 0xdd, 0x77, 0xf8, 0x04, 0xfd, 0x7a, 0xb4, 0xc8, 0x4a,
	0x42, 0x21, 0x60, 0x68, 0x1d, 0x53, 0x4d, 0x76, 0x59, 0x23, 0xab, 0x95, 0xaf, 0x5a, 0xc7, 0x66,
	0xe7, 0x87, 0xbd, 0x0a, 0x27, 0x00, 0xf5, 0xf2, 0xb9, 0xdc, 0xaa, 0xff, 0x82, 0xc3, 0xdb, 0xaa,
	0x9f, 0xb4, 0x28, 0xad, 0xc3, 0x28, 0x04, 0x5e, 0x7a, 0xae, 0x91, 0x61, 0x0a, 0xb0, 0xcc, 0x4d,
	0xf3, 0x8e, 0x3b, 0x08, 0xea, 0x05, 0x86, 0xb6, 0xc6, 0x9d, 0xe9, 0x60, 0x76, 0x19, 0xb9, 0xd7,
	0x47, 0xbf, 0x91, 0xac, 0x21, 0x48, 0x04, 0xa7, 0x7e, 0x8b, 0xa1, 0x6d, 0x47, 0x13, 0x4f, 0x1f,
	0x45, 0xb3, 0x1f, 0x26, 0xd4, 0x30, 0x74, 0x51, 0x62, 0xcf, 0xf5, 0x0e, 0x17, 0x3a, 0x41, 0xed,
	0xca, 0xdd, 0x00, 0x2c, 0x0e, 0x76, 0xa5, 0x79, 0x82, 0x9f, 0xca, 0xf7, 0x3b, 0x72, 0xc8, 0x10,
	0xba, 0xb1, 0x92, 0x58, 0xba, 0x43, 0x74, 0x58, 0x2d, 0xc8, 0x04, 0xce, 0x57, 0x9a, 0x4b, 0xc3,
	0x85, 0x4d, 0x95, 0x9c, 0x27, 0xb4, 0xe3, 0x06, 0xff, 0x9a, 0xb3, 0x37, 0x08, 0x96, 0xb9, 0x79,
	0xd7, 0x85, 0x20, 0x8f, 0x70, 0x1d, 0x73, 0x2b, 0xf6, 0x75, 0xfd, 0x35, 0xea, 0x74, 0x9b, 0x0a,
	0x5e, 0x71, 0xee, 0xde, 0x17, 0xbe, 0xfb, 0x07, 0x96, 0x6b, 0x9e, 0x1d, 0x70, 0x34, 0xf0, 0xc6,
	0xb3, 0x52, 0xd9, 0xa6, 0xe7, 0x7e, 0xfb, 0xfd, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x2b,
	0x9d, 0xc3, 0x18, 0x02, 0x00, 0x00,
}
